<?xml version="1.0" encoding="ISO-8859-1"?><xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"xmlns:xs="http://www.w3.org/2001/XMLSchema"xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"xmlns:pom="http://maven.apache.org/POM/4.0.0"><!--*******DO NOT CHANGE src/site/site.xml*******It is overwitten each time with src/main/xsl/site.xml.Change this file.--><xsl:template match="/projects"><document xmlns="http://maven.apache.org/XDOC/2.0"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">  <properties>    <title>JiBX schema library</title>    <author email="don@donandann.com">Don Corley</author>  </properties>  <!-- Optional HEAD element, which is copied as is into the XHTML <head> element -->  <head>    <meta name="description" content="JiBX schema library"/>    <meta name="keywords" content="JiBX schema library, XML Java Binding, XML, Java, JiBX, jibx.org, Open Source"/>  </head>  <body>  <p>  The JiBX Schema Library.<br/>    Here are the maven and OSGi locations for these schema bindings.  </p>	    <ul>		    <xsl:for-each select="modules/module">	    <li>			<xsl:call-template name="local-link">				<xsl:with-param name="name"><xsl:value-of select="pom:project/pom:name"/></xsl:with-param>			</xsl:call-template>	    </li>	    	    </xsl:for-each>	    </ul>  Here are the instructions for <a href="contributing.html">contributing your schema</a> to the schema library.<br/>  Our OSGi obr repository index is located at: <code>http://jibx.org/repository.xml</code>	<xsl:for-each select="modules/module">	    <xsl:element name="section">	    <xsl:attribute name="name"><xsl:value-of select="pom:project/pom:name"/></xsl:attribute>	    <p>        <xsl:if test="pom:project/pom:description!=''"><strong><xsl:value-of select="pom:project/pom:description"/><br/></strong></xsl:if>        <xsl:if test="pom:project/pom:properties/pom:link!=''">For more detailed instructions, click             <xsl:element name="a">            <xsl:attribute name="href"><xsl:value-of select="pom:project/pom:properties/pom:link"/></xsl:attribute>              here            </xsl:element>.<br/>        </xsl:if>	    <xsl:if test="pom:project/pom:organization/pom:name!=''">	    	Schema site:		    <xsl:element name="a">		    <xsl:attribute name="href"><xsl:value-of select="pom:project/pom:organization/pom:url"/></xsl:attribute>		      &#xA0;<xsl:value-of select="pom:project/pom:organization/pom:name"/>		    </xsl:element>		    <br/>	    </xsl:if>	    <xsl:if test="pom:project/pom:developers/pom:developer/pom:name!=''">	    	Developer:		<xsl:value-of select="pom:project/pom:developers/pom:developer/pom:name"/></xsl:if>	    <xsl:if test="pom:project/pom:developers/pom:developer/pom:email!=''">		    <xsl:element name="a">		    <xsl:attribute name="href">mailto:<xsl:value-of select="pom:project/pom:developers/pom:developer/pom:email"/></xsl:attribute>		      &#xA0;<xsl:value-of select="pom:project/pom:developers/pom:developer/pom:email"/>		    </xsl:element>	    </xsl:if>	    </p>	    <ul>		    <xsl:for-each select="modules/module">	    <li>			<xsl:call-template name="local-link">				<xsl:with-param name="name"><xsl:value-of select="pom:project/pom:name"/></xsl:with-param>			</xsl:call-template>	    </li>			    <xsl:for-each select="modules/module">	<!-- Yes, flat from here -->	    <li>			<xsl:call-template name="local-link">				<xsl:with-param name="name"><xsl:value-of select="pom:project/pom:name"/></xsl:with-param>			</xsl:call-template>	    </li>				    <xsl:for-each select="modules/module">	<!-- Yes, flat from here -->	    <li>			<xsl:call-template name="local-link">				<xsl:with-param name="name"><xsl:value-of select="pom:project/pom:name"/></xsl:with-param>			</xsl:call-template>	    </li>				    </xsl:for-each>			    </xsl:for-each>		    </xsl:for-each>	    </ul>	    <!-- Can't figure out how to get the template to do this -->		    <xsl:for-each select="modules/module">		    	<xsl:apply-templates select="*" />			    <xsl:for-each select="modules/module">	<!-- Yes, flat from here -->		    	<xsl:apply-templates select="*" />				    <xsl:for-each select="modules/module">	<!-- Yes, flat from here -->		    	<xsl:apply-templates select="*" />				    </xsl:for-each>			    </xsl:for-each>		    </xsl:for-each>	    </xsl:element>    </xsl:for-each>  </body></document></xsl:template><xsl:template match="pom:project">	<xsl:if test="pom:packaging!='pom'">		<xsl:element name="subsection">		<xsl:attribute name="name"><xsl:value-of select="pom:name"/></xsl:attribute>		<strong><xsl:value-of select="pom:description"/></strong><source>&lt;dependency&gt;  &lt;groupId&gt;<xsl:if test="pom:groupId!=''"><xsl:value-of select="pom:groupId"/></xsl:if><xsl:if test="not(pom:groupId!='')"><xsl:value-of select="pom:parent/pom:groupId"/></xsl:if>&lt;/groupId&gt;  &lt;artifactId&gt;<xsl:if test="pom:artifactId!=''"><xsl:value-of select="pom:artifactId"/></xsl:if><xsl:if test="not(pom:artifactId!='')"><xsl:value-of select="pom:parent/pom:artifactId"/></xsl:if>&lt;/artifactId&gt;  &lt;version&gt;<xsl:if test="pom:groupId!=''"><xsl:value-of select="pom:version"/></xsl:if><xsl:if test="not(pom:version!='')"><xsl:value-of select="pom:parent/pom:version"/></xsl:if>&lt;/version&gt;&lt;/dependency&gt;</source>		</xsl:element>Java package: <code><xsl:if test="pom:artifactId!=''"><xsl:value-of select="pom:artifactId"/></xsl:if><xsl:if test="not(pom:artifactId!='')"><xsl:value-of select="pom:parent/pom:artifactId"/></xsl:if></code><br/>Java jar: <code><xsl:element name="a">	<xsl:attribute name="href">http://repo2.maven.org/maven2/	<xsl:call-template name="group-to-path">		<xsl:with-param name="groupId"><xsl:if test="pom:groupId!=''"><xsl:value-of select="translate(pom:groupId,'.','/')"/></xsl:if><xsl:if test="not(pom:groupId!='')"><xsl:value-of select="translate(pom:parent/pom:groupId,'.','/')"/></xsl:if></xsl:with-param>	</xsl:call-template>/<xsl:if test="pom:artifactId!=''"><xsl:value-of select="pom:artifactId"/></xsl:if><xsl:if test="not(pom:artifactId!='')"><xsl:value-of select="pom:parent/pom:artifactId"/></xsl:if><xsl:if test="not(pom:artifactId!='')"><xsl:value-of select="pom:parent/pom:artifactId"/></xsl:if>/<xsl:if test="pom:version!=''"><xsl:value-of select="pom:version"/></xsl:if><xsl:if test="not(pom:version!='')"><xsl:value-of select="pom:parent/pom:version"/></xsl:if>/<xsl:if test="pom:artifactId!=''"><xsl:value-of select="pom:artifactId"/></xsl:if><xsl:if test="not(pom:artifactId!='')"><xsl:value-of select="pom:parent/pom:artifactId"/></xsl:if><xsl:if test="not(pom:artifactId!='')"><xsl:value-of select="pom:parent/pom:artifactId"/></xsl:if>-<xsl:if test="pom:version!=''"><xsl:value-of select="pom:version"/></xsl:if><xsl:if test="not(pom:version!='')"><xsl:value-of select="pom:parent/pom:version"/></xsl:if>.jar</xsl:attribute><xsl:if test="pom:artifactId!=''"><xsl:value-of select="pom:artifactId"/></xsl:if><xsl:if test="not(pom:artifactId!='')"><xsl:value-of select="pom:parent/pom:artifactId"/></xsl:if><xsl:if test="not(pom:artifactId!='')"><xsl:value-of select="pom:parent/pom:artifactId"/></xsl:if>-<xsl:if test="pom:version!=''"><xsl:value-of select="pom:version"/></xsl:if><xsl:if test="not(pom:version!='')"><xsl:value-of select="pom:parent/pom:version"/></xsl:if>.jar</xsl:element></code><br/>OSGi name: <code><xsl:value-of select="pom:name"/></code><br/>OSGi symbolic name: <code><xsl:if test="pom:artifactId!=''"><xsl:value-of select="pom:artifactId"/></xsl:if><xsl:if test="not(pom:artifactId!='')"><xsl:value-of select="pom:parent/pom:artifactId"/></xsl:if>@<xsl:if test="pom:groupId!=''"><xsl:value-of select="pom:version"/></xsl:if><xsl:if test="not(pom:version!='')"><xsl:value-of select="pom:parent/pom:version"/></xsl:if></code><br/>Source code jar: <code><xsl:element name="a">	<xsl:attribute name="href">http://repo2.maven.org/maven2/	<xsl:call-template name="group-to-path">		<xsl:with-param name="groupId"><xsl:if test="pom:groupId!=''"><xsl:value-of select="translate(pom:groupId,'.','/')"/></xsl:if><xsl:if test="not(pom:groupId!='')"><xsl:value-of select="translate(pom:parent/pom:groupId,'.','/')"/></xsl:if></xsl:with-param>	</xsl:call-template>/<xsl:if test="pom:artifactId!=''"><xsl:value-of select="pom:artifactId"/></xsl:if><xsl:if test="not(pom:artifactId!='')"><xsl:value-of select="pom:parent/pom:artifactId"/></xsl:if><xsl:if test="not(pom:artifactId!='')"><xsl:value-of select="pom:parent/pom:artifactId"/></xsl:if>/<xsl:if test="pom:version!=''"><xsl:value-of select="pom:version"/></xsl:if><xsl:if test="not(pom:version!='')"><xsl:value-of select="pom:parent/pom:version"/></xsl:if>/<xsl:if test="pom:artifactId!=''"><xsl:value-of select="pom:artifactId"/></xsl:if><xsl:if test="not(pom:artifactId!='')"><xsl:value-of select="pom:parent/pom:artifactId"/></xsl:if><xsl:if test="not(pom:artifactId!='')"><xsl:value-of select="pom:parent/pom:artifactId"/></xsl:if>-<xsl:if test="pom:version!=''"><xsl:value-of select="pom:version"/></xsl:if><xsl:if test="not(pom:version!='')"><xsl:value-of select="pom:parent/pom:version"/></xsl:if>-sources.jar</xsl:attribute><xsl:if test="pom:artifactId!=''"><xsl:value-of select="pom:artifactId"/></xsl:if><xsl:if test="not(pom:artifactId!='')"><xsl:value-of select="pom:parent/pom:artifactId"/></xsl:if><xsl:if test="not(pom:artifactId!='')"><xsl:value-of select="pom:parent/pom:artifactId"/></xsl:if>-<xsl:if test="pom:version!=''"><xsl:value-of select="pom:version"/></xsl:if><xsl:if test="not(pom:version!='')"><xsl:value-of select="pom:parent/pom:version"/></xsl:if>-sources.jar</xsl:element></code><br/>Javadoc jar: <code><xsl:element name="a">	<xsl:attribute name="href">http://repo2.maven.org/maven2/			<xsl:call-template name="group-to-path">				<xsl:with-param name="groupId"><xsl:if test="pom:groupId!=''"><xsl:value-of select="translate(pom:groupId,'.','/')"/></xsl:if><xsl:if test="not(pom:groupId!='')"><xsl:value-of select="translate(pom:parent/pom:groupId,'.','/')"/></xsl:if></xsl:with-param>			</xsl:call-template>/<xsl:if test="pom:artifactId!=''"><xsl:value-of select="pom:artifactId"/></xsl:if><xsl:if test="not(pom:artifactId!='')"><xsl:value-of select="pom:parent/pom:artifactId"/></xsl:if><xsl:if test="not(pom:artifactId!='')"><xsl:value-of select="pom:parent/pom:artifactId"/></xsl:if>/<xsl:if test="pom:version!=''"><xsl:value-of select="pom:version"/></xsl:if><xsl:if test="not(pom:version!='')"><xsl:value-of select="pom:parent/pom:version"/></xsl:if>/<xsl:if test="pom:artifactId!=''"><xsl:value-of select="pom:artifactId"/></xsl:if><xsl:if test="not(pom:artifactId!='')"><xsl:value-of select="pom:parent/pom:artifactId"/></xsl:if><xsl:if test="not(pom:artifactId!='')"><xsl:value-of select="pom:parent/pom:artifactId"/></xsl:if>-<xsl:if test="pom:version!=''"><xsl:value-of select="pom:version"/></xsl:if><xsl:if test="not(pom:version!='')"><xsl:value-of select="pom:parent/pom:version"/></xsl:if>-javadoc.jar</xsl:attribute><xsl:if test="pom:artifactId!=''"><xsl:value-of select="pom:artifactId"/></xsl:if><xsl:if test="not(pom:artifactId!='')"><xsl:value-of select="pom:parent/pom:artifactId"/></xsl:if><xsl:if test="not(pom:artifactId!='')"><xsl:value-of select="pom:parent/pom:artifactId"/></xsl:if>-<xsl:if test="pom:version!=''"><xsl:value-of select="pom:version"/></xsl:if><xsl:if test="not(pom:version!='')"><xsl:value-of select="pom:parent/pom:version"/></xsl:if>-javadoc.jar</xsl:element></code><br/><xsl:if test="pom:build/pom:plugins/pom:plugin/pom:configuration/pom:schemaLocation!=''">Schema location: <code><xsl:element name="a">		<xsl:attribute name="href"><xsl:value-of select="pom:build/pom:plugins/pom:plugin/pom:configuration/pom:schemaLocation"/></xsl:attribute>		<xsl:value-of select="pom:build/pom:plugins/pom:plugin/pom:configuration/pom:schemaLocation"/></xsl:element></code></xsl:if></xsl:if></xsl:template><xsl:template match="*"></xsl:template><xsl:template name="local-link">	<xsl:param name="name"></xsl:param>	    <xsl:element name="a">	    <xsl:attribute name="href">#<xsl:value-of select="$name"/></xsl:attribute>		<xsl:value-of select="$name"/>	    </xsl:element></xsl:template><xsl:template name="group-to-path">	<xsl:param name="groupId"></xsl:param>		<xsl:value-of select="$groupId"/></xsl:template></xsl:stylesheet>