<?xml version="1.0" encoding="UTF-8" standalone="no"?><file>
	<LogicFile ID="1">
		<LastChanged>2013-02-03T06:15:31</LastChanged>
		<Deleted>N</Deleted>
		<Sequence>50</Sequence>
		<MethodName>openMainRecord</MethodName>
		<LogicDescription/>
		<MethodReturns/>
		<MethodInterface/>
		<MethodClassName>TourActivityScreen</MethodClassName>
		<LogicSource>return new TourActivity(this);</LogicSource>
		<LogicThrows/>
		<Protection/>
		<CopyFrom/>
		<IncludeScope>4</IncludeScope>
	</LogicFile>
	<LogicFile ID="2">
		<LastChanged>2013-02-03T06:16:46</LastChanged>
		<Deleted>N</Deleted>
		<Sequence>20</Sequence>
		<MethodName>openMainRecord</MethodName>
		<LogicDescription/>
		<MethodReturns/>
		<MethodInterface/>
		<MethodClassName>TourActivityGridScreen</MethodClassName>
		<LogicSource>return new TourActivity(this);</LogicSource>
		<LogicThrows/>
		<Protection/>
		<CopyFrom/>
		<IncludeScope>4</IncludeScope>
	</LogicFile>
	<LogicFile ID="3">
		<LastChanged>2013-02-03T06:16:54</LastChanged>
		<Deleted>N</Deleted>
		<Sequence>100</Sequence>
		<MethodName>setupSFields</MethodName>
		<LogicDescription/>
		<MethodReturns/>
		<MethodInterface/>
		<MethodClassName>TourActivityGridScreen</MethodClassName>
		<LogicSource/>
		<LogicThrows/>
		<Protection/>
		<CopyFrom/>
		<IncludeScope>4</IncludeScope>
	</LogicFile>
	<LogicFile ID="4">
		<LastChanged>2013-02-08T22:14:23</LastChanged>
		<Deleted>N</Deleted>
		<Sequence>100</Sequence>
		<MethodName>setTargetDate</MethodName>
		<LogicDescription/>
		<MethodReturns>Object</MethodReturns>
		<MethodInterface>Date date</MethodInterface>
		<MethodClassName>TourActivity</MethodClassName>
		<LogicSource><![CDATA[targetDate = date;
Map<String, Object> properties = new HashMap<String, Object>();
properties.put(TARGET_DATE, targetDate);
try {
    return this.handleRemoteCommand(SET_FILTER, properties);
} catch (Exception ex) {
    return null;    // Ignore
}]]></LogicSource>
		<LogicThrows/>
		<Protection/>
		<CopyFrom/>
		<IncludeScope>7</IncludeScope>
	</LogicFile>
	<LogicFile ID="5">
		<LastChanged>2013-02-10T13:45:28</LastChanged>
		<Deleted>N</Deleted>
		<Sequence>200</Sequence>
		<MethodName>doRemoteCommand</MethodName>
		<LogicDescription/>
		<MethodReturns/>
		<MethodInterface/>
		<MethodClassName>TourActivity</MethodClassName>
		<LogicSource><![CDATA[if (SET_FILTER.equalsIgnoreCase(strCommand))
    if (properties != null)
        if (properties.get(TARGET_DATE) instanceof Date)
    {
        targetDate = (Date)properties.get(TARGET_DATE);
        CompareFileFilter filter = (CompareFileFilter)this.getListener(CompareFileFilter.class);
        if ((filter == null) && (targetDate != null))
        {
            FileFilter listener = null;
            this.addListener(listener = new FileFilter(null)
            {
                /**
             * Check the record locally.
             */
            public boolean doLocalCriteria(StringBuffer strbFilter, boolean bIncludeFileName, Vector<BaseField> vParamList)
            {
                Date startDate = ((DateField)getOwner().getField(TourActivity.START_DATE)).getDateTime();
                Date endDate = ((DateField)getOwner().getField(TourActivity.END_DATE)).getDateTime();
                short days = (short)getOwner().getField(TourActivity.AVAILABILITY_DAYS).getValue();
                if (startDate != null)
                    if (startDate.after(targetDate))
                        return false;
                if (endDate != null)
                    if (endDate.before(targetDate))
                        return false;
                if (days != 0)
                {
                    Calendar calendar = Converter.gCalendar;
                    calendar.setTime(targetDate);
                    short dayOfWeek = (short)calendar.get(Calendar.DAY_OF_WEEK);
                    if ((days & (1 << (dayOfWeek - 1))) == 0)
                        return false;
                }
                return super.doLocalCriteria(strbFilter, bIncludeFileName, vParamList);
            }
        });
        listener.setMasterSlaveFlag(FileListener.RUN_IN_MASTER | FileListener.RUN_IN_SLAVE);
    }
    else if (filter != null)
    {
        if (targetDate == null)
            filter.free();
        else
        {
            
        }
    }
    return Boolean.TRUE;
}
return super;]]></LogicSource>
		<LogicThrows/>
		<Protection/>
		<CopyFrom/>
		<IncludeScope>1</IncludeScope>
	</LogicFile>
	<LogicFile ID="6">
		<LastChanged>2013-02-08T22:12:53</LastChanged>
		<Deleted>N</Deleted>
		<Sequence>30</Sequence>
		<MethodName>addScreenRecord</MethodName>
		<LogicDescription/>
		<MethodReturns/>
		<MethodInterface/>
		<MethodClassName>TourActivityGridScreen</MethodClassName>
		<LogicSource>return new TourActivityScreenRecord(this);</LogicSource>
		<LogicThrows/>
		<Protection/>
		<CopyFrom/>
		<IncludeScope>4</IncludeScope>
	</LogicFile>
	<LogicFile ID="7">
		<LastChanged>2013-02-08T22:13:11</LastChanged>
		<Deleted>N</Deleted>
		<Sequence>40</Sequence>
		<MethodName>addToolbarButtons</MethodName>
		<LogicDescription/>
		<MethodReturns/>
		<MethodInterface/>
		<MethodClassName>TourActivityGridScreen</MethodClassName>
		<LogicSource><![CDATA[super;
this.getScreenRecord().getField(TourActivityScreenRecord.TARGET_DATE).setupDefaultView(toolScreen.getNextLocation(ScreenConstants.RIGHT_WITH_DESC, ScreenConstants.SET_ANCHOR), toolScreen, ScreenConstants.DEFAULT_DISPLAY);]]></LogicSource>
		<LogicThrows/>
		<Protection/>
		<CopyFrom/>
		<IncludeScope>4</IncludeScope>
	</LogicFile>
	<LogicFile ID="8">
		<LastChanged>2013-02-09T21:06:03</LastChanged>
		<Deleted>N</Deleted>
		<Sequence>50</Sequence>
		<MethodName>addListeners</MethodName>
		<LogicDescription/>
		<MethodReturns/>
		<MethodInterface/>
		<MethodClassName>TourActivityGridScreen</MethodClassName>
		<LogicSource><![CDATA[super;
this.setAppending(false);
this.setEditing(false);
this.getMainRecord().setSelected(true); // Need all the fields
this.getScreenRecord().getField(TourActivityScreenRecord.TARGET_DATE).addListener(new FieldReSelectHandler(this) {
    public int fieldChanged(boolean bDisplayOption, int iMoveMode)
    {
        TourActivity record = (TourActivity)getMainRecord();
        record.setTargetDate(((DateField)this.getOwner()).getDateTime());
        return super.fieldChanged(bDisplayOption, iMoveMode);
    }
});]]></LogicSource>
		<LogicThrows/>
		<Protection/>
		<CopyFrom/>
		<IncludeScope>4</IncludeScope>
	</LogicFile>
</file>